<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:ui="clr-namespace:LLMClient.UI"
                    xmlns:dialog="clr-namespace:LLMClient.UI.Dialog"
                    xmlns:converters="clr-namespace:LLMClient.UI.Component.Converters"
                    xmlns:component="clr-namespace:LLMClient.UI.Component">
    <DataTemplate x:Key="DefaultRequestViewItemDataTemplate"
                  DataType="{x:Type dialog:RequestViewItem}">
        <Grid HorizontalAlignment="Right"
              Margin="50,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <materialDesign:PopupBox StaysOpen="True"
                                     Width="30"
                                     Height="30"
                                     VerticalAlignment="Top"
                                     Margin="0,4,0,0">
                <Menu Padding="0"
                      ItemsPanel="{StaticResource VerticalItemsPanelTemplate}">
                    <MenuItem Header="复制"
                              Command="{x:Static ui:CommonCommands.CopyCommand}"
                              CommandParameter="{Binding Mode=OneTime}"
                              Icon="{materialDesign:PackIcon Kind=ContentCopy}" />
                    <MenuItem Header="总结之前对话"
                              Command="{x:Static ui:CommonCommands.Conclusion}"
                              CommandParameter="{Binding}"
                              Icon="{materialDesign:PackIcon Kind=TagText}" />
                    <MenuItem Header="排除之前对话"
                              ToolTip="将之前的对话清出上下文"
                              Command="{x:Static ui:CommonCommands.Exclude}"
                              CommandParameter="{Binding}"
                              Icon="{materialDesign:PackIcon Kind=FormatAlignTop}" />
                    <MenuItem Header="清空之前对话"
                              ToolTip="删除之前的对话内容"
                              Command="{x:Static ui:CommonCommands.Clear}"
                              CommandParameter="{Binding}"
                              Icon="{materialDesign:PackIcon Kind=WaveArrowUp}" />
                    <MenuItem Header="删除"
                              Command="Delete"
                              CommandParameter="{Binding}"
                              Icon="{materialDesign:PackIcon Kind=DeleteOutline}" />
                </Menu>
            </materialDesign:PopupBox>
            <materialDesign:Card Padding="8"
                                 Grid.Column="1"
                                 UniformCornerRadius="8"
                                 BorderThickness="0"
                                 Background="{DynamicResource MaterialDesign.Brush.Primary.Light}"
                                 Foreground="{DynamicResource MaterialDesign.Brush.Primary.Light.Foreground}">
                <StackPanel>
                    <TextBox TextWrapping="Wrap"
                             IsReadOnly="True"
                             Margin="0"
                             BorderThickness="0"
                             materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                             Text="{Binding TextMessage,Mode=OneTime}" />
                    <ItemsControl ItemsSource="{Binding Attachments,Mode=OneTime}"
                                  Margin="0,8,0,0"
                                  Visibility="Visible">
                        <b:Interaction.Triggers>
                            <b:DataTrigger Binding="{Binding Attachments.Count}"
                                           Value="0">
                                <b:ChangePropertyAction PropertyName="Visibility"
                                                        Value="Collapsed" />
                            </b:DataTrigger>
                        </b:Interaction.Triggers>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type dialog:Attachment}">
                                <materialDesign:Chip IsDeletable="False"
                                                     MaxWidth="140"
                                                     Margin="0"
                                                     ToolTipService.InitialShowDelay="0"
                                                     ToolTip="{Binding OriUri,Mode=OneTime}"
                                                     Command="{Binding OpenFileCommand}"
                                                     Content="{Binding Name,Mode=OneTime}">
                                    <materialDesign:Chip.Icon>
                                        <materialDesign:PackIcon
                                            Kind="{Binding Type,Mode=OneWay,Converter={x:Static converters:AttachmentTypeConverter.Instance}}" />
                                    </materialDesign:Chip.Icon>
                                </materialDesign:Chip>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </StackPanel>
            </materialDesign:Card>
        </Grid>
    </DataTemplate>
    <component:TypeBasedDataTemplateSelector x:Key="MultiResponseHeaderTemplateSelector">
        <component:DataTemplateTypePair>
            <component:DataTemplateTypePair.Template>
                <DataTemplate DataType="{x:Type dialog:ResponseViewItem}">
                    <StackPanel Orientation="Horizontal"
                                Margin="3"
                                ToolTipService.InitialShowDelay="0"
                                ToolTip="{Binding Model.Endpoint.DisplayName,Mode=OneTime}">
                        <Image VerticalAlignment="Center"
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Source="{Binding Model.Icon.CurrentSource,Mode=OneWay}"
                               Width="26"
                               Height="26" />
                        <TextBlock Text="{Binding ModelName,Mode=OneTime}"
                                   VerticalAlignment="Center"
                                   Margin="6,0,0,0"
                                   MaxWidth="200"
                                   TextTrimming="CharacterEllipsis"
                                   Style="{StaticResource MaterialDesignSubtitle2TextBlock}" />
                        <materialDesign:PackIcon Kind="ExclamationThick"
                                                 Foreground="Red"
                                                 Height="30"
                                                 Width="30"
                                                 VerticalAlignment="Center"
                                                 Margin="-5,0"
                                                 ToolTip="当前回复有错误，将不加入对话上下文"
                                                 Visibility="{Binding IsAvailableInContext,Mode=OneWay,Converter={x:Static materialDesign:BooleanToVisibilityConverter.NotCollapsedInstance}}" />
                        <Button Width="16"
                                Height="16"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox},Path=DataContext.RemoveCommand}"
                                Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox},Path=DataContext.IsMultiResponse,Mode=OneWay,Converter={x:Static materialDesign:BooleanToVisibilityConverter.CollapsedInstance}}"
                                CommandParameter="{Binding  }"
                                Margin="6,0,-6,0"
                                VerticalAlignment="Center"
                                ToolTip="删除当前"
                                Template="{StaticResource ItemDeleteButtonTemplate}" />
                    </StackPanel>
                </DataTemplate>
            </component:DataTemplateTypePair.Template>
        </component:DataTemplateTypePair>
        <component:DataTemplateTypePair>
            <component:DataTemplateTypePair.Template>
                <DataTemplate DataType="{x:Type dialog:RespondingViewItem}">
                    <StackPanel Orientation="Horizontal">
                        <Button Width="32"
                                Height="32"
                                Padding="0"
                                Command="{Binding CancelCommand}"
                                Style="{StaticResource MaterialDesignIconButton}">
                            <Grid>
                                <ProgressBar IsIndeterminate="True"
                                             Foreground="{DynamicResource MaterialDesign.Brush.Primary.Light.Foreground}"
                                             Width="28"
                                             Height="28"
                                             Style="{StaticResource MaterialDesignCircularProgressBar}"
                                             Value="0" />
                                <materialDesign:PackIcon Width="17"
                                                         Height="17"
                                                         Kind="Stop"
                                                         VerticalAlignment="Center"
                                                         HorizontalAlignment="Center" />
                            </Grid>
                        </Button>
                        <TextBlock Text="{Binding ModelName,Mode=OneTime}"
                                   VerticalAlignment="Center"
                                   Margin="6,0,0,0"
                                   MaxWidth="200"
                                   TextTrimming="CharacterEllipsis">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}"
                                       BasedOn="{StaticResource MaterialDesignSubtitle2TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsAvailableInContext,Mode=OneWay}"
                                                     Value="True">
                                            <Setter Property="Foreground"
                                                    Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </component:DataTemplateTypePair.Template>
        </component:DataTemplateTypePair>
    </component:TypeBasedDataTemplateSelector>
    <component:TypeBasedDataTemplateSelector x:Key="MultiResponseContentTemplateSelector">
        <component:DataTemplateTypePair>
            <component:DataTemplateTypePair.Template>
                <DataTemplate DataType="{x:Type dialog:RespondingViewItem}">
                    <GroupBox materialDesign:ColorZoneAssist.Mode="Dark"
                              Style="{StaticResource MaterialDesignCardGroupBox}"
                              Header="正在生成文档。。。。。。。。">
                        <Grid>
                            <ScrollViewer>
                                <component:MarkdownTextBlock
                                    TextWrapping="Wrap"
                                    CollectionText="{Binding  Client.RespondingText,Mode=OneWay}" />
                            </ScrollViewer>
                        </Grid>
                    </GroupBox>
                </DataTemplate>
            </component:DataTemplateTypePair.Template>
        </component:DataTemplateTypePair>
        <component:DataTemplateTypePair>
            <component:DataTemplateTypePair.Template>
                <DataTemplate DataType="{x:Type dialog:ResponseViewItem}">
                    <StackPanel>
                        <component:FlowDocumentScrollViewerEx
                            BorderThickness="0"
                            HighlightableRanges="{Binding Document.FoundTextRanges,Mode=OneWay}"
                            CleanDocument="{Binding Document.Document,Mode=OneWay}"
                            Style="{StaticResource ExFlowDocumentScrollViewerStyle}"
                            Visibility="{Binding Document,Converter={x:Static materialDesign:NullableToVisibilityConverter.CollapsedInstance},Mode=OneTime}">
                            <component:FlowDocumentScrollViewerEx.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="Copy"
                                              Header="复制选定">
                                        <MenuItem.Icon>
                                            <materialDesign:PackIcon
                                                Kind="ContentCopy" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="SelectAll"
                                              Header="全选">
                                        <MenuItem.Icon>
                                            <materialDesign:PackIcon
                                                Kind="SelectAll" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <Separator />
                                    <MenuItem Header="复制文本"
                                              Command="{x:Static ui:CommonCommands.CopyCommand}"
                                              CommandParameter="{Binding Mode=OneTime}">
                                        <MenuItem.Icon>
                                            <materialDesign:PackIcon
                                                Kind="ContentCopy" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="导出"
                                              ToolTip="导出为Markdown"
                                              Command="{x:Static ui:CommonCommands.ExportCommand}"
                                              CommandParameter="{Binding TextContent,Mode=OneTime}">
                                        <MenuItem.Icon>
                                            <materialDesign:PackIcon
                                                Kind="Export" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </component:FlowDocumentScrollViewerEx.ContextMenu>
                        </component:FlowDocumentScrollViewerEx>
                        <TextBox IsReadOnly="True"
                                 materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                                 BorderThickness="0"
                                 Text="{Binding ErrorMessage,Mode=OneTime}"
                                 TextWrapping="Wrap"
                                 Foreground="Red"
                                 Padding="10"
                                 Visibility="{Binding IsInterrupt,Mode=OneTime,Converter={x:Static materialDesign:BooleanToVisibilityConverter.CollapsedInstance}}"/>
                    </StackPanel>
                </DataTemplate>
            </component:DataTemplateTypePair.Template>
        </component:DataTemplateTypePair>
    </component:TypeBasedDataTemplateSelector>
    <DataTemplate x:Key="EraseDataTemplate"
                  DataType="{x:Type dialog:EraseViewItem}">
        <Grid Height="30">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="删除"
                              Command="Delete"
                              CommandParameter="{Binding}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="DeleteOutline" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Separator HorizontalAlignment="Stretch"
                       Height="1"
                       Margin="50,0"
                       Foreground="Black" />
            <Separator Grid.Column="1"
                       HorizontalAlignment="Stretch"
                       Margin="50,0"
                       Height="1"
                       Foreground="Black" />
            <TextBlock Grid.Column="0" Text="上下文已清除"
                       Grid.ColumnSpan="2"
                       Padding="10,5"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Style="{DynamicResource MaterialDesignSubtitle2TextBlock}" />
        </Grid>
    </DataTemplate>
    <Style x:Key="RefreshButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Width"
                Value="28" />
        <Setter Property="Height"
                Value="28" />
    </Style>
    <Style x:Key="AutoHideMenuItemStyle"
           TargetType="MenuItem"
           BasedOn="{StaticResource {x:Type MenuItem}}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="MultiResponseViewItemDataTemplate" DataType="{x:Type dialog:MultiResponseViewItem}">
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Bottom">
                    <ListBox Height="60"
                             HorizontalAlignment="Right"
                             VerticalAlignment="Bottom"
                             VerticalContentAlignment="Bottom"
                             ScrollViewer.HorizontalScrollBarVisibility="Auto"
                             SelectedIndex="{Binding AcceptedIndex,Mode=TwoWay}"
                             Style="{StaticResource MaterialDesignChoiceChipPrimaryListBox}"
                             ItemsSource="{Binding Items,Mode=OneWay}"
                             ItemTemplateSelector="{StaticResource MultiResponseHeaderTemplateSelector}"
                             ItemsPanel="{StaticResource HorizontalItemsPanelTemplate}" />
                    <Menu VerticalAlignment="Center"
                          Margin="10,0,0,0">
                        <MenuItem Icon="{materialDesign:PackIcon Kind=MoreVert,Size=18}"
                                  Width="20"
                                  Height="50"
                                  Padding="0">
                            <MenuItem Header="由此创建新会话"
                                      Command="{x:Static ui:CommonCommands.Branch}"
                                      CommandParameter="{Binding}"
                                      Icon="{materialDesign:PackIcon SourceBranchPlus}"
                                      Style="{StaticResource AutoHideMenuItemStyle}" />
                            <MenuItem Header="移除之后消息"
                                      Command="{Binding RebaseCommand}"
                                      ToolTip="保留当前消息并删除所有之后的消息"
                                      Icon="{materialDesign:PackIcon Kind=WaveArrowDown}" />
                            <MenuItem Header="标记为有效回复"
                                      IsCheckable="True"
                                      IsChecked="{Binding AcceptedResponse.IsManualValid,Mode=TwoWay}"
                                      Visibility="{Binding AcceptedResponse.IsInterrupt,Mode=OneWay,Converter={x:Static materialDesign:BooleanToVisibilityConverter.CollapsedInstance}}" />
                        </MenuItem>
                    </Menu>
                    <materialDesign:PopupBox Padding="4,0"
                                             StaysOpen="True"
                                             VerticalAlignment="Center"
                                             ToolTip="对比其他模型"
                                             Margin="4,0"
                                             Foreground="{DynamicResource MaterialDesign.Brush.Primary}"
                                             ToggleContent="{materialDesign:PackIcon Kind=AddBold,Size=20}"
                                             Style="{StaticResource MaterialDesignToolPopupBox}"
                                             PopupContent="{Binding }"
                                             PopupContentTemplate="{StaticResource  PopupSelectModelDataTemplate}" />
                    <Button Style="{StaticResource RefreshButtonStyle}"
                            VerticalAlignment="Center"
                            Margin="6,0,0,0"
                            ToolTip="重试"
                            Command="{Binding  RefreshSelectedCommand}"
                            Content="{materialDesign:PackIcon Kind=Autorenew,Size=20}" />
                    <Button Style="{StaticResource RefreshButtonStyle}"
                            Command="{Binding EditCommand}"
                            VerticalAlignment="Center"
                            Margin="6,0,0,0"
                            ToolTip="编辑当前回复"
                            Content="{materialDesign:PackIcon Kind=PencilOutline,Size=20}" />
                    <Button Style="{StaticResource RefreshButtonStyle}"
                            Command="{x:Static ui:CommonCommands.CopyCommand}"
                            CommandParameter="{Binding AcceptedResponse,Mode=OneWay}"
                            VerticalAlignment="Center"
                            Margin="6,0,0,0"
                            ToolTip="复制当前回复文本"
                            Content="{materialDesign:PackIcon Kind=ContentPaste,Size=20}" />
                </StackPanel>
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Margin="16,0,0,0">
                    <TextBlock Text="在上下文中有效"
                               VerticalAlignment="Center" />
                    <ToggleButton Command="{Binding SetAsAvailableCommand}"
                                  VerticalAlignment="Center"
                                  Margin="6,0"
                                  ToolTip="通过将当前回复设置为在上下文中有效，可以跳过一些回复，减少上下文的长度"
                                  IsChecked="{Binding AcceptedResponse.IsAvailableInContext,Mode=OneWay}" />
                </StackPanel>
            </Grid>
            <materialDesign:Card Padding="0"
                                 UniformCornerRadius="8"
                                 HorizontalAlignment="Stretch"
                                 BorderThickness="0"
                                 Style="{StaticResource MaterialDesignOutlinedCard}">
                <ContentControl Content="{Binding AcceptedResponse,Mode=OneWay}"
                                ContentTemplateSelector="{StaticResource MultiResponseContentTemplateSelector}" />
            </materialDesign:Card>
            <TextBlock DataContext="{Binding AcceptedResponse,Mode=OneWay}"
                       HorizontalAlignment="Left"
                       Margin="0,6,0,0">
                <TextBlock.Text>
                    <MultiBinding
                        StringFormat="Tokens: {0}, Price：{1:F4}$，Latency: {2}ms, Duration:{3}s, Speed:{4:F1}tps">
                        <Binding Path="Tokens" Mode="OneTime" />
                        <Binding Path="Price" Mode="OneTime" TargetNullValue="None" />
                        <Binding Path="Latency" Mode="OneTime" />
                        <Binding Path="Duration" Mode="OneTime" />
                        <Binding Path="." Mode="OneTime"
                                 Converter="{x:Static converters:TpsConverter.Instance}" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </StackPanel>
    </DataTemplate>
    <component:TypeBasedDataTemplateSelector x:Key="DialogTemplateSelector">
        <component:DataTemplateTypePair Template="{StaticResource DefaultRequestViewItemDataTemplate}" />
        <component:DataTemplateTypePair Template="{StaticResource MultiResponseViewItemDataTemplate}" />
        <component:DataTemplateTypePair>
            <DataTemplate DataType="{x:Type dialog:SummaryRequestViewItem}">
                <Grid HorizontalAlignment="Right"
                      Margin="50,0,0,0">
                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="删除"
                                      Command="Delete"
                                      CommandParameter="{Binding}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="DeleteOutline" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Grid.ContextMenu>
                    <Rectangle Stroke="Black"
                               StrokeThickness="1.5"
                               RadiusX="8" RadiusY="8"
                               StrokeDashArray="6,2"
                               SnapsToDevicePixels="True" />
                    <TextBlock TextWrapping="Wrap"
                               Margin="8"
                               materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                               Text="{Binding SummaryPrompt,Mode=OneTime}" />
                </Grid>
            </DataTemplate>
        </component:DataTemplateTypePair>
        <component:DataTemplateTypePair Template="{StaticResource EraseDataTemplate}" />
    </component:TypeBasedDataTemplateSelector>
    <Style x:Key="DialogListBoxStyle"
           TargetType="{x:Type component:ListBoxEx}"
           BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Margin" Value="0,0,5,5" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Item" />
        <Setter Property="VirtualizingPanel.CacheLength" Value="15,15" />
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True" />
        <Setter Property="materialDesign:ListBoxItemAssist.ShowSelection" Value="False" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <component:CustomVirtualizingStackPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Margin" Value="0,10,6,0" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplateSelector"
                Value="{StaticResource DialogTemplateSelector}" />
    </Style>
</ResourceDictionary>