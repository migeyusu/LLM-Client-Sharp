<Application x:Class="LLMClient.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LLMClient"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:ui="clr-namespace:LLMClient.UI"
             xmlns:component="clr-namespace:LLMClient.UI.Component"
             ShutdownMode="OnLastWindowClose">
    <Application.Resources>
        <ResourceDictionary>
            <Style x:Key="ArrowButtonStyle" TargetType="RepeatButton">
                <Setter Property="Width" Value="30" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalArrowScrollViewer"
                   TargetType="{x:Type ScrollViewer}">
                <Style.Resources>
                    <Style x:Key="MinimalHorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <!-- Track是滚动条的轨道，是必须的部分 -->
                                    <Track x:Name="PART_Track"
                                           IsDirectionReversed="False"
                                           Focusable="False">
                                        <Track.Thumb>
                                            <!-- Thumb就是滚动条上可以拖动的滑块 -->
                                            <Thumb Focusable="False">
                                                <Thumb.Template>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <!-- 用一个圆角的Border来充当滑块视觉效果 -->
                                                        <Border CornerRadius="2"
                                                                Background="{TemplateBinding Foreground}"
                                                                Opacity="0.7" />
                                                    </ControlTemplate>
                                                </Thumb.Template>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Style.Resources>
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="PART_LeftButton"
                                              Style="{StaticResource ArrowButtonStyle}"
                                              Command="ScrollBar.PageLeftCommand"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <materialDesign:PackIcon Kind="MenuLeft"
                                                             Width="30"
                                                             Height="30"
                                                             Foreground="{TemplateBinding Foreground}" />
                                    <RepeatButton.Visibility>
                                        <MultiBinding
                                            Converter="{x:Static component:ScrollEndVisibilityConverter.LeftEnd}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="HorizontalOffset" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="ScrollableWidth" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                </RepeatButton>
                                <Grid Grid.Column="1">
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                            Margin="{TemplateBinding Padding}"
                                                            CanContentScroll="{TemplateBinding CanContentScroll}"
                                                            Content="{TemplateBinding Content}"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                                </Grid>
                                <RepeatButton x:Name="PART_RightButton"
                                              Grid.Column="2"
                                              Style="{StaticResource ArrowButtonStyle}"
                                              Command="ScrollBar.PageRightCommand"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <materialDesign:PackIcon Kind="MenuRight"
                                                             Width="30"
                                                             Height="30"
                                                             Foreground="{TemplateBinding Foreground}" />
                                    <RepeatButton.Visibility>
                                        <MultiBinding
                                            Converter="{x:Static component:ScrollEndVisibilityConverter.RightEnd}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="HorizontalOffset" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                     Path="ScrollableWidth" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ScrollableWidth" Value="0">
                                    <Setter TargetName="PART_LeftButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="PART_RightButton" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ItemDeleteButtonTemplate"
                             TargetType="{x:Type Button}">
                <Grid>
                    <Ellipse x:Name="Bg"
                             Fill="#FFA6A6A6"
                             Stroke="#FF009587"
                             StrokeThickness="0" />
                    <materialDesign:PackIcon Width="12"
                                             Height="12"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Kind="Close" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter TargetName="Bg"
                                Property="StrokeThickness"
                                Value="1" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="{x:Type FlowDocumentScrollViewer}"
                   x:Key="ExFlowDocumentScrollViewerStyle">
                <Setter Property="FontFamily"
                        Value="Microsoft YaHei" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type FlowDocumentScrollViewer}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Margin="{TemplateBinding Padding}">
                                <component:ScrollViewerEx x:Name="PART_ContentHost" CanContentScroll="True"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <component:KUnitConverter x:Key="KUnitConverter" />
            <materialDesign:InvertBooleanConverter x:Key="InvertBooleanConverter" />
            <component:SiYuanFont x:Key="DefaultFontFamily" />
            <Style TargetType="{x:Type component:ParamView}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type component:ParamView}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{TemplateBinding PropertyName}"
                                           VerticalAlignment="Bottom"
                                           FontWeight="Black"
                                           Grid.ColumnSpan="2"
                                           Style="{StaticResource MaterialDesignSubtitle2TextBlock}" />
                                <TextBlock Grid.Row="0"
                                           Grid.Column="1"
                                           TextWrapping="Wrap"
                                           VerticalAlignment="Bottom"
                                           Style="{StaticResource MaterialDesignOverlineTextBlock}"
                                           Text="{TemplateBinding Description}" />
                                <TextBox Grid.Row="1" Grid.Column="0"
                                         Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                         materialDesign:TextFieldAssist.SuffixText="{TemplateBinding Unit}"
                                         Padding="4"
                                         Margin="0,10"
                                         BorderBrush="Gainsboro"
                                         Width="120"
                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}"
                                         TextWrapping="NoWrap"
                                         FontSize="16" />
                                <Slider Grid.Row="1" Grid.Column="1"
                                        VerticalAlignment="Center"
                                        Margin="20,0,0,0"
                                        SmallChange="{TemplateBinding TickFrequency}"
                                        LargeChange="{TemplateBinding TickFrequency}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path= Value,Mode=TwoWay}"
                                        TickFrequency="{TemplateBinding TickFrequency}"
                                        IsSnapToTickEnabled="True"
                                        Maximum="{TemplateBinding Maximum}"
                                        Minimum="{TemplateBinding Minimum}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin"
                        Value="0,10,0,0" />
            </Style>
            <Style TargetType="{x:Type component:ParamConfigView}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type component:ParamConfigView}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Row="0"
                                          Grid.ColumnSpan="2"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Available,Mode=TwoWay}"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding PropertyName}"
                                          materialDesign:CheckBoxAssist.CheckBoxSize="30"
                                          Margin="0,0,0,6" />
                                <StackPanel Grid.Row="0" Grid.Column="1"
                                            Orientation="Horizontal"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center">
                                    <TextBlock Text="Range："
                                               Margin="0,0,6,0" />
                                    <TextBox materialDesign:HintAssist.Hint="Min"
                                             materialDesign:TextFieldAssist.SuffixText="{TemplateBinding Unit}"
                                             IsReadOnly="True"
                                             VerticalAlignment="Center"
                                             Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Minimum,Mode=TwoWay}" />
                                    <TextBlock Text="-"
                                               Margin="6,0" />
                                    <TextBox materialDesign:HintAssist.Hint="Max"
                                             VerticalAlignment="Center"
                                             materialDesign:TextFieldAssist.SuffixText="{TemplateBinding Unit}"
                                             IsReadOnly="{TemplateBinding MaximumEditable,Converter={StaticResource InvertBooleanConverter}}"
                                             Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Maximum,Mode=TwoWay}" />
                                </StackPanel>
                                <TextBlock Grid.Row="1"
                                           Grid.Column="1"
                                           TextWrapping="Wrap"
                                           Padding="10,0,0,0"
                                           VerticalAlignment="Center"
                                           Style="{StaticResource MaterialDesignOverlineTextBlock}"
                                           Text="{TemplateBinding Description}" />
                                <TextBox Grid.Row="1" Grid.Column="0"
                                         IsEnabled="{TemplateBinding Available}"
                                         HorizontalAlignment="Left"
                                         Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                         Padding="4"
                                         Margin="0,10"
                                         BorderBrush="Gainsboro"
                                         Width="100"
                                         materialDesign:TextFieldAssist.SuffixText="{TemplateBinding Unit}"
                                         TextWrapping="NoWrap"
                                         FontSize="16">
                                    <TextBox.Text>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value"
                                                 Mode="TwoWay" />
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin"
                        Value="0,10,0,0" />
            </Style>
            <Style x:Key="CloseButtonStyle"
                   TargetType="{x:Type Button}"
                   BasedOn="{StaticResource MaterialDesignIconButton}">
                <Setter Property="Height"
                        Value="26" />
                <Setter Property="Width"
                        Value="26" />
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="Command"
                        Value="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="CommandParameter">
                    <Setter.Value>
                        <system:Boolean>False</system:Boolean>
                    </Setter.Value>
                </Setter>
                <Setter Property="Content">
                    <Setter.Value>
                        <materialDesign:PackIcon Kind="CloseThick"
                                                 Width="16"
                                                 Height="16" />
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DialogContentControlStyle"
                   TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="Padding"
                        Value="16,0,16,16" />
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Text="{Binding}"
                                           Margin="16"
                                           Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                                           FontWeight="Black"
                                           VerticalAlignment="Center" />
                                <Button Style="{StaticResource CloseButtonStyle}"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top" />
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                            <StackPanel>
                                <ContentPresenter ContentSource="Header" />
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type materialDesign:Snackbar}"
                   BasedOn="{StaticResource {x:Type materialDesign:Snackbar}}">
                <Setter Property="Height"
                        Value="48" />
                <Setter Property="Padding"
                        Value="20,0" />
            </Style>
            <Style TargetType="{x:Type materialDesign:SnackbarMessage}">
                <Setter Property="Height"
                        Value="48" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="10,5" />
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="materialDesign:SnackbarMessage">
                            <Border CornerRadius="8"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <!-- will become a Panel to wrap a "pretend" button -->
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type materialDesign:Snackbar}}, Path=(materialDesign:SnackbarMessage.ContentMaxHeight)}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}">
                                    <ContentPresenter.Resources>
                                        <DataTemplate DataType="{x:Type system:String}">
                                            <TextBlock Text="{Binding}" />
                                        </DataTemplate>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UI/MarkdownResource.xaml" />
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="Indigo" SecondaryColor="DeepOrange" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesign2.defaults.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.SplitButton.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.popupbox.xaml" />
                <ResourceDictionary Source="UI/DataTemplateDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>