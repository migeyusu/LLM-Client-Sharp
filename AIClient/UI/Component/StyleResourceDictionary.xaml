<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:converters="clr-namespace:LLMClient.UI.Component.Converters">
    <Style x:Key="InputBoxStyle"
           TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
        <Setter Property="TextAlignment"
                Value="Left" />
        <Setter Property="TextWrapping"
                Value="Wrap" />
        <Setter Property="AcceptsReturn"
                Value="True" />
        <Setter Property="AcceptsTab"
                Value="True" />
        <Setter Property="SpellCheck.IsEnabled"
                Value="True" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto" />
    </Style>
    <!--<Style x:Key="DeleteItemButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Background"
                Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
        <Setter Property="Command" Value="Delete" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>-->
    <Style x:Key="HoverDeleteItemButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Background"
                Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
        <Setter Property="Command" Value="Delete" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ItemDeleteButtonTemplate"
                     TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <SolidColorBrush x:Key="HoverBrush">#FF009587</SolidColorBrush>
        </ControlTemplate.Resources>
        <Grid>
            <Ellipse x:Name="Bg"
                     Fill="#FFA6A6A6"
                     Stroke="{StaticResource HoverBrush}"
                     StrokeThickness="0" />
            <materialDesign:PackIcon Width="12"
                                     Height="12"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Kind="Close"
                                     x:Name="Icon" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="Bg"
                        Property="StrokeThickness"
                        Value="1" />
                <Setter TargetName="Icon"
                        Property="Foreground"
                        Value="{StaticResource HoverBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="HorizontalArrowScrollViewer"
           TargetType="{x:Type ScrollViewer}">
        <Style.Resources>
            <Style x:Key="MinimalHorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <!-- Track是滚动条的轨道，是必须的部分 -->
                            <Track x:Name="PART_Track"
                                   IsDirectionReversed="False"
                                   Focusable="False">
                                <Track.Thumb>
                                    <!-- Thumb就是滚动条上可以拖动的滑块 -->
                                    <Thumb Focusable="False">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <!-- 用一个圆角的Border来充当滑块视觉效果 -->
                                                <Border CornerRadius="2"
                                                        Background="{TemplateBinding Foreground}"
                                                        Opacity="0.7" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <RepeatButton x:Name="PART_LeftButton"
                                      Style="{StaticResource ArrowButtonStyle}"
                                      Command="ScrollBar.PageLeftCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <materialDesign:PackIcon Kind="MenuLeft"
                                                     Width="36"
                                                     Height="36"
                                                     Foreground="{TemplateBinding Foreground}" />
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{x:Static converters:ScrollEndVisibilityConverter.LeftEnd}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="HorizontalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ScrollableWidth" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>
                        <Grid Grid.Column="1">
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                        </Grid>
                        <RepeatButton x:Name="PART_RightButton"
                                      Grid.Column="2"
                                      Style="{StaticResource ArrowButtonStyle}"
                                      Command="ScrollBar.PageRightCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <materialDesign:PackIcon Kind="MenuRight"
                                                     Width="36"
                                                     Height="36"
                                                     Foreground="{TemplateBinding Foreground}" />
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{x:Static converters:ScrollEndVisibilityConverter.RightEnd}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="HorizontalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ScrollableWidth" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ScrollableWidth" Value="0">
                            <Setter TargetName="PART_LeftButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_RightButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Height"
                Value="26" />
        <Setter Property="Width"
                Value="26" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Command"
                Value="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="CommandParameter">
            <Setter.Value>
                <system:Boolean>False</system:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Content">
            <Setter.Value>
                <materialDesign:PackIcon Kind="CloseThick"
                                         Width="16"
                                         Height="16" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DialogContentControlStyle"
           TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Padding"
                Value="16,0,16,16" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <TextBlock Text="{Binding}"
                                   Margin="16"
                                   Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                                   FontWeight="Black"
                                   VerticalAlignment="Center" />
                        <Button Style="{StaticResource CloseButtonStyle}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <StackPanel>
                        <ContentPresenter ContentSource="Header" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type materialDesign:Snackbar}"
           BasedOn="{StaticResource {x:Type materialDesign:Snackbar}}">
        <Setter Property="Height"
                Value="48" />
        <Setter Property="Padding"
                Value="20,0" />
    </Style>
    <Style TargetType="{x:Type materialDesign:SnackbarMessage}">
        <Setter Property="Height"
                Value="48" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="10,5" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="materialDesign:SnackbarMessage">
                    <Border CornerRadius="8"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <!-- will become a Panel to wrap a "pretend" button -->
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type materialDesign:Snackbar}}, Path=(materialDesign:SnackbarMessage.ContentMaxHeight)}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}">
                            <ContentPresenter.Resources>
                                <DataTemplate DataType="{x:Type system:String}">
                                    <TextBlock Text="{Binding}" />
                                </DataTemplate>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxHoverButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="StopButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <ProgressBar IsIndeterminate="True"
                                 Foreground="White"
                                 Margin="-6,0,0,0"
                                 Style="{StaticResource MaterialDesignCircularProgressBar}"
                                 Value="0" />
                    <TextBlock Text="停止"
                               Margin="10,0,0,0"
                               Style="{StaticResource MaterialDesignBody1TextBlock}" />
                </StackPanel>
            </Setter.Value>
        </Setter>
        <Setter Property="materialDesign:ElevationAssist.Elevation"
                Value="Dp16" />
        <Setter Property="Height"
                Value="36" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius"
                Value="18" />
    </Style>

</ResourceDictionary>