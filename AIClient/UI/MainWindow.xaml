<component:ExtendedWindow x:Class="LLMClient.UI.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:LLMClient"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                      xmlns:ui="clr-namespace:LLMClient.UI"
                      xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                      xmlns:models="clr-namespace:LLMClient.Azure.Models"
                      xmlns:ui1="clr-namespace:LLMClient.UI"
                      xmlns:component="clr-namespace:LLMClient.UI.Component"
                      xmlns:System="clr-namespace:System;assembly=System.Runtime"
                      xmlns:grammars="clr-namespace:TextMateSharp.Grammars;assembly=TextMateSharp.Grammars"
                      mc:Ignorable="d"
                      FontFamily="Microsoft YaHei UI"
                      Title="LLM Client"
                      WindowStartupLocation="CenterScreen"
                      Height="850"
                      Width="1600"
                      Closing="MainWindow_OnClosing"
                      d:DataContext="{d:DesignInstance ui:MainViewModel}">
    <Window.Style>
        <Style TargetType="{x:Type ui:MainWindow}"
               BasedOn="{StaticResource MaterialDesignWindow}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome ResizeBorderThickness="5"
                                  CaptionHeight="52"
                                  CornerRadius="16"
                                  GlassFrameThickness="17,53,17,17" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ui:MainWindow}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="52" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid Background="{DynamicResource MaterialDesign.Brush.Background}"
                                  Margin="{TemplateBinding BannerMargin}"
                                  VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <materialDesign:PackIcon Kind="RobotHappyOutline"
                                                         Width="35"
                                                         Height="35"
                                                         Margin="16,0,16,0"
                                                         Foreground="{DynamicResource MaterialDesign.Brush.Primary}"
                                                         VerticalAlignment="Center" />
                                <!--<Image Source="{TemplateBinding Icon}"
                                       Width="35"
                                       Height="35"
                                       Margin="16,0"
                                       VerticalAlignment="Center"
                                       WindowChrome.IsHitTestVisibleInChrome="True" />-->
                                <TextBlock Grid.Column="1"
                                           Text="{TemplateBinding Title}"
                                           Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                                           VerticalAlignment="Center" />
                                <ContentControl Grid.Column="2"
                                                Content="{TemplateBinding Banner}"
                                                Margin="0,0,16,0" />
                            </Grid>
                            <Border Grid.Row="1"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <component:ExtendedWindow.Banner>
        <StackPanel Orientation="Horizontal"
                    IsEnabled="{Binding ElementName=MainDialogHost, Path=IsOpen,Mode=OneWay,Converter={StaticResource InvertBooleanConverter}}">
            <StackPanel.Resources>
                <ObjectDataProvider x:Key="DataFromEnum" MethodName="GetValues"
                                    ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="grammars:ThemeName" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
            </StackPanel.Resources>
            <Button VerticalAlignment="Center"
                    Width="32"
                    Height="32"
                    Margin="20,0,0,0"
                    ToolTip="打开配置"
                    Click="OpenConfig_OnClick"
                    WindowChrome.IsHitTestVisibleInChrome="True"
                    Background="{DynamicResource MaterialDesignTextFieldBoxBackground}"
                    Style="{StaticResource MaterialDesignIconButton}">
                <materialDesign:PackIcon Kind="CogOutline"
                                         Width="20"
                                         Height="20"
                                         RenderOptions.BitmapScalingMode="HighQuality" />
            </Button>
            <TextBlock VerticalAlignment="Center" Text="Light"
                       Margin="16,0,0,0" />
            <ToggleButton Margin="6,0" IsChecked="{Binding IsDarkTheme,Mode=TwoWay}"
                          WindowChrome.IsHitTestVisibleInChrome="True" />
            <TextBlock VerticalAlignment="Center" Text="Dark"/>
            <TextBlock Text="Code Highlight:"
                       VerticalAlignment="Center"
                       Margin="16,0,8,0" />
            <ComboBox ItemsSource="{Binding Source={StaticResource DataFromEnum}}"
                      WindowChrome.IsHitTestVisibleInChrome="True"
                      SelectedItem="{Binding ThemeName,Mode=TwoWay}" />
        </StackPanel>
    </component:ExtendedWindow.Banner>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:CallMethodAction TargetObject="{Binding}" MethodName="Initialize" />
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <materialDesign:DialogHost DialogContentUniformCornerRadius="10"
                               x:Name="MainDialogHost"
                               DialogTheme="Inherit">
        <materialDesign:DialogHost.Resources>
            <DataTemplate DataType="{x:Type ui:ModelSelectionViewModel}">
                <ui:ModelSelectionView Width="900"
                                    Height="600" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type ui:EndpointConfigureViewModel}">
                <ui:EndpointConfigureView Width="600"
                                          Height="400" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type models:AzureTextModelBase}">
                <HeaderedContentControl Header="{Binding Name,Mode=OneTime}"
                                        Width="600"
                                        Style="{StaticResource DialogContentControlStyle}">
                    <models:AzureTextModelBaseView />
                </HeaderedContentControl>
            </DataTemplate>
            <DataTemplate DataType="{x:Type models:MetaLlama3}">
                <HeaderedContentControl Header="{Binding Name,Mode=OneTime}"
                                        Width="600"
                                        Style="{StaticResource DialogContentControlStyle}">
                    <models:MetaLlama3View />
                </HeaderedContentControl>
            </DataTemplate>
            <DataTemplate DataType="{x:Type models:OpenAIO1}">
                <HeaderedContentControl Header="{Binding Name,Mode=OneTime}"
                                        Width="600"
                                        Style="{StaticResource DialogContentControlStyle}">
                    <models:OpenAIO1View />
                </HeaderedContentControl>
            </DataTemplate>
            <DataTemplate DataType="{x:Type models:DeepSeekR1}">
                <HeaderedContentControl Header="{Binding Name,Mode=OneTime}"
                                        Width="600"
                                        Style="{StaticResource DialogContentControlStyle}">
                    <models:DeepSeekR1View />
                </HeaderedContentControl>
            </DataTemplate>
            <DataTemplate DataType="{x:Type models:AzureModelInfo}">
                <HeaderedContentControl Style="{StaticResource DialogContentControlStyle}"
                                        Header="Model Info"
                                        Width="800">
                    <models:AzureModelInfoView Height="600" />
                </HeaderedContentControl>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:GlobalConfig}">
                <HeaderedContentControl Style="{StaticResource DialogContentControlStyle}"
                                        Header="软件配置">
                    <ui:GlobalConfigView />
                </HeaderedContentControl>
            </DataTemplate>
        </materialDesign:DialogHost.Resources>
        <Grid Margin="10"
              IsEnabled="{Binding IsInitializing,Mode=OneWay,Converter={StaticResource InvertBooleanConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="220"
                                  MaxWidth="600" />
                <ColumnDefinition MinWidth="200" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource MaterialDesignOutlinedLightButton}"
                        Padding="8,2"
                        Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                        CommandParameter="{Binding ConfigureViewModel,Mode=OneTime}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Connection" />
                        <TextBlock Text="配置"
                                   Margin="5,0,0,0"
                                   VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <Button Style="{StaticResource MaterialDesignOutlinedLightButton}"
                        Padding="8,2"
                        Margin="10,0,0,0"
                        Command="{Binding SaveCommand}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="ContentSave" />
                        <TextBlock Text="保存"
                                   Margin="5,0,0,0"
                                   VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <Button Style="{StaticResource MaterialDesignOutlinedLightButton}"
                        Padding="8,2"
                        Margin="10,0,0,0"
                        Command="{Binding LoadCommand}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Reload" />
                        <TextBlock Text="重载"
                                   Margin="5,0,0,0"
                                   VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
            </StackPanel>
            <ListBox Grid.Row="1" Grid.Column="0" SelectedItem="{Binding PreDialog,Mode=TwoWay}"
                     Margin="0,10,6,0"
                     BorderThickness="0"
                     ItemsSource="{Binding DialogViewModels,Mode=OneWay}">
                <ListBox.CommandBindings>
                    <CommandBinding Command="Delete" Executed="CommandBinding_OnExecuted" />
                </ListBox.CommandBindings>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}"
                           BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="Height"
                                Value="80" />
                        <Setter Property="BorderThickness"
                                Value="0,0,0,1" />
                        <Setter Property="Padding"
                                Value="4" />
                        <Setter Property="BorderBrush"
                                Value="DimGray" />
                        <Setter Property="VerticalContentAlignment"
                                Value="Stretch" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border Margin="{TemplateBinding Margin}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            ClipToBounds="{TemplateBinding ClipToBounds}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                                        <VisualTransition.GeneratedEasingFunction>
                                                            <CircleEase EasingMode="EaseOut" />
                                                        </VisualTransition.GeneratedEasingFunction>
                                                    </VisualTransition>
                                                </VisualStateGroup.Transitions>
                                                <VisualState Name="Normal" />
                                                <VisualState Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="1"
                                                                         Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState Name="Disabled" />
                                            </VisualStateGroup>
                                            <VisualStateGroup Name="SelectionStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.6" />
                                                </VisualStateGroup.Transitions>
                                                <VisualState Name="Selected">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="1"
                                                                         Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState Name="Unselected" />
                                                <VisualState Name="SelectedUnfocused">
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="SelectedUnfocusedBorder"
                                                            Storyboard.TargetProperty="Opacity"
                                                            To="1"
                                                            Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid>
                                            <Border x:Name="MouseOverBorder"
                                                    Background="{Binding Path=(materialDesign:ListBoxItemAssist.HoverBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                                    Opacity="0" />
                                            <Border x:Name="SelectedBorder"
                                                    Background="{Binding Path=(materialDesign:ListBoxItemAssist.SelectedFocusedBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                                    Opacity="0" />
                                            <Border x:Name="SelectedUnfocusedBorder"
                                                    Background="{Binding Path=(materialDesign:ListBoxItemAssist.SelectedUnfocusedBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                                    Opacity="0" />
                                            <materialDesign:Ripple x:Name="Ripple"
                                                                   Padding="{TemplateBinding Padding}"
                                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                   Content="{TemplateBinding Content}"
                                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                   Feedback="{TemplateBinding Foreground, Converter={x:Static materialDesign:BrushRoundConverter.Instance}}"
                                                                   Focusable="False"
                                                                   RecognizesAccessKey="False"
                                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <Button CommandParameter="{Binding}"
                                                    Background="{DynamicResource MaterialDesignTextFieldBoxBackground}"
                                                    x:Name="DeleteButton"
                                                    Command="Delete"
                                                    Height="30"
                                                    Width="30"
                                                    Margin="10,0"
                                                    Visibility="Collapsed"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource MaterialDesignIconButton}">
                                                <materialDesign:PackIcon Kind="DeleteOutline"
                                                                         Width="18"
                                                                         Height="18" />
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value=".56" />
                                        </Trigger>
                                        <DataTrigger
                                            Binding="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ListBoxItemAssist.ShowSelection)}"
                                            Value="False">
                                            <Setter TargetName="MouseOverBorder" Property="Visibility"
                                                    Value="Collapsed" />
                                            <Setter TargetName="Ripple" Property="Feedback" Value="Transparent" />
                                            <Setter TargetName="SelectedBorder" Property="Visibility"
                                                    Value="Collapsed" />
                                            <Setter TargetName="SelectedUnfocusedBorder" Property="Visibility"
                                                    Value="Collapsed" />
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True">
                                            <Trigger.Setters>
                                                <Setter TargetName="DeleteButton"
                                                        Property="Visibility"
                                                        Value="Visible" />
                                            </Trigger.Setters>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type ui:DialogViewModel}">
                        <DockPanel>
                            <Image DockPanel.Dock="Left"
                                   Width="30"
                                   Height="30"
                                   Margin="10,0"
                                   VerticalAlignment="Center"
                                   Source="{Binding Model.Icon,Mode=OneWay}" />
                            <Grid DockPanel.Dock="Right">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Text="{Binding Model.Name}"
                                           Margin="0,0,0,5"
                                           Foreground="DimGray"
                                           TextWrapping="NoWrap"
                                           TextTrimming="CharacterEllipsis"
                                           VerticalAlignment="Top"
                                           Style="{StaticResource MaterialDesignCaptionTextBlock}" />
                                <TextBlock VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                                           Grid.Row="1"
                                           Text="{Binding Topic,Mode=OneWay}" />
                                <TextBlock Grid.Row="2"
                                           Text="{Binding Shortcut,Mode=OneTime}"
                                           Foreground="DimGray"
                                           VerticalAlignment="Bottom"
                                           TextWrapping="NoWrap"
                                           TextTrimming="CharacterEllipsis"
                                           Style="{StaticResource MaterialDesignCaptionTextBlock}" />
                            </Grid>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Button Grid.Row="1" Grid.Column="0"
                    Style="{StaticResource MaterialDesignFloatingActionMiniSecondaryButton}"
                    ToolTip="创建"
                    Margin="10"
                    Command="{Binding SelectModelCommand}"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Left">
                <materialDesign:PackIcon Width="14"
                                         Height="14"
                                         Kind="Plus" />
            </Button>
            <ContentControl Grid.Row="0" Grid.Column="1"
                            Grid.RowSpan="2"
                            Content="{Binding PreDialog,Mode=OneWay}">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type ui:DialogViewModel}">
                        <ui:DialogView HorizontalAlignment="Stretch" />
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
            <materialDesign:Card Grid.Row="0" Grid.Column="0"
                                 Grid.RowSpan="2"
                                 Grid.ColumnSpan="2"
                                 Visibility="{Binding IsInitializing,Mode=OneWay,Converter={StaticResource BooleanToVisibilityConverter}}"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center">
                <StackPanel Margin="30" DataContext="{Binding LoadingProgress,Mode=OneTime}">
                    <ProgressBar IsIndeterminate="True"
                                 Style="{StaticResource MaterialDesignCircularProgressBar}"
                                 Value="{Binding ProgressValue,Mode=OneWay}" />
                    <TextBlock Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                               TextWrapping="Wrap"
                               Margin="0,15,0,0"
                               Text="{Binding Message,Mode=OneTime}" />
                </StackPanel>
            </materialDesign:Card>
            <Image Grid.Row="0" Grid.Column="1"
                   Width="40"
                   Height="40"
                   Stretch="Uniform"
                   Source="{Binding  TestSource,Mode=OneTime}">
                
            </Image>
            <!--<WrapPanel Grid.Row="0" Grid.Column="1"
                       Grid.RowSpan="2"
                       Background="DimGray">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Width"
                                Value="40" />
                        <Setter Property="Height"
                                Value="40" />
                        <Setter Property="Margin"
                                Value="10"/>
                    </Style>
                </WrapPanel.Resources>
                <TextBlock Text="MaterialDesign.Brush.Background" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Background}" />
                <TextBlock Text="MaterialDesign.Brush.Foreground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Foreground}" />
                <TextBlock Text="MaterialDesign.Brush.ForegroundLight" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.ForegroundLight}" />
                <TextBlock Text="MaterialDesign.Brush.Card.Background" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Card.Background}" />
                <TextBlock Text="MaterialDesign.Brush.Chip.Background" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Chip.Background}" />
                <TextBlock Text="MaterialDesign.Brush.ColorZone.DarkBackground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.ColorZone.DarkBackground}" />
                <TextBlock Text="MaterialDesign.Brush.ColorZone.DarkForeground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.ColorZone.DarkForeground}" />
                <TextBlock Text="MaterialDesign.Brush.ColorZone.LightBackground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.ColorZone.LightBackground}" />
                <TextBlock Text="MaterialDesign.Brush.ColorZone.LightForeground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.ColorZone.LightForeground}" />
                <TextBlock Text="MaterialDesign.Brush.Header.Foreground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Header.Foreground}" />
                <TextBlock Text="MaterialDesign.Brush.Secondary.Foreground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Secondary.Foreground}" />
                <TextBlock Text="MaterialDesign.Brush.Separator.Background" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Separator.Background}" />
                <TextBlock Text="MaterialDesign.Brush.TabControl.Divider" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.TabControl.Divider}" />
                <TextBlock Text="MaterialDesign.Brush.GridSplitter.Background" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.GridSplitter.Background}" />
                <TextBlock Text="MaterialDesign.Brush.Chip.Background" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Chip.Background}" />
                <TextBlock Text="MaterialDesign.Brush.Chip.OutlineBorder" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Chip.OutlineBorder}" />
                <TextBlock Text="MaterialDesign.Brush.Badged.DarkBackground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Badged.DarkBackground}" />
                <TextBlock Text="MaterialDesign.Brush.Badged.DarkForeground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Badged.DarkForeground}" />
                <TextBlock Text="MaterialDesign.Brush.Badged.LightBackground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Badged.LightBackground}" />
                <TextBlock Text="MaterialDesign.Brush.Badged.LightForeground" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Badged.LightForeground}" />
                <TextBlock Text="MaterialDesign.Brush.Card.Border" />
                <Rectangle Fill="{DynamicResource MaterialDesign.Brush.Card.Border}" />
            </WrapPanel>-->
            <GridSplitter Grid.Row="0" Grid.Column="0"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Right"
                          Background="DarkGray"
                          Grid.RowSpan="2"
                          Margin="0,60"
                          Width="3" />
        </Grid>
    </materialDesign:DialogHost>
</component:ExtendedWindow>